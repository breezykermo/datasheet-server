name: CD
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #---- SETUP ----#
      - name: Setup env variables
        run: echo "ANSIBLE_RUNTIME_TAGS=$(echo 'timemap,datasheet,nginx')" >> $GITHUB_ENV
        # TODO: should differ depending on ${{ github.repository }}
      - uses: actions/checkout@v2
      # - uses: webfactory/ssh-agent@v0.4.1
      #   with:
      #       ssh-private-key: ${{ secrets.CI_SSH }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install ansible and docker
        run: python3 -m pip install ansible docker jmespath
      - name: Install devops dependencies
        run: ansible-galaxy install angstwad.docker_ubuntu &&
             sudo apt install gawk
      - name: Checkout configs repo
        uses: actions/checkout@v2
        with:
          repository: forensic-architecture/configs
          ref: devops/ci-workflow # TODO: remove this once merged
          token: ${{ secrets.CD_Workflow_PAT }} # `GitHub_PAT` is a secret that contains your PAT
          path: configs
      - name: Checkout devops repo
        uses: actions/checkout@v2
        with:
          repository: forensic-architecture/devops
          ref: devops/cd-workflow
          path: devops

      #---- ANSIBLE PREPARATION ----#
      - name: Generate vault file
        run: python3 configs/generate_timemap_vault.py -f "$GITHUB_WORKSPACE/configs/timemap" -p $PORT -SA "$SERVICE_ACCOUNT_EMAIL" -SPK "$SERVICE_ACCOUNT_PRIVATE_KEY"
        env:
          PORT: 4004
          SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
      - name: Copy new config file
        run: cat vault.yml && test -f "vault.yml" && cp vault.yml devops/deploy_timemap/vars/vault.yml
      - name: Create hosts file
        run: cd devops/deploy_timemap && mkdir inventories && cd inventories &&
             echo -e "[$HOST]\n
             $IP_ADDRESS" > hosts
        env:
          HOST: fa_internal
          IP_ADDRESS: ${{secrets.INTERNAL_IP_ADDRESS}}
      - name: Write key to file
        run: cd $HOME/.ssh && echo "$FADEV_SSH_PRIVATE_KEY" > fadev && chmod 600 $HOME/.ssh/fadev
        env:
          FADEV_SSH_PRIVATE_KEY: ${{ secrets.FADEV_SSH_PRIVATE_KEY }}

      #---- DEPLOYMENT ----#
      - name: Check templates from vault file
        run: ansible-playbook -K devops/deploy_timemap/playbooks/check_templates.yml
      - name: Run ansible deploy
        run: export ANSIBLE_HOST_GROUP="$HOST" &&
             export ANSIBLE_REMOTE_USER='fadev' &&
             export ANSIBLE_BECOME='yes' &&
             export ANSIBLE_CONFIG=$GITHUB_WORKSPACE/devops/deploy_timemap/ansible.cfg &&
             export ANSIBLE_HOST_KEY_CHECKING=False &&
             cd devops/deploy_timemap/playbooks &&
             ansible-playbook deploy_timemap.yml --private-key $HOME/.ssh/fadev --extra-vars "ansible_become_pass=$FADEV_PWORD" --tags $ANSIBLE_RUNTIME_TAGS
        env:
          FADEV_PWORD: ${{ secrets.FADEV_PWORD }}
          HOST: fa_internal
      - name: Curl UPDATE endpoint
        run: curl https://internal.forensic-architecture.org/example-server/api/update

